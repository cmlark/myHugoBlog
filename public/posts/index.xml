<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Posts on cmlark&#39;s blog</title>
    <link>http://localhost:1313/posts/</link>
    <description>Recent content in Posts on cmlark&#39;s blog</description>
    <image>
      <title>cmlark&#39;s blog</title>
      <url>http://localhost:1313/%3Clink%20to%20your%20image%3E</url>
      <link>http://localhost:1313/%3Clink%20to%20your%20image%3E</link>
    </image>
    <generator>Hugo -- 0.145.0</generator>
    <language>zh-cn</language>
    <lastBuildDate>Sat, 22 Mar 2025 17:35:40 +0800</lastBuildDate>
    <atom:link href="http://localhost:1313/posts/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Git与hugo项目部署完整指南</title>
      <link>http://localhost:1313/posts/git/git%E4%B8%8Ehugo%E9%A1%B9%E7%9B%AE%E9%83%A8%E7%BD%B2%E5%AE%8C%E6%95%B4%E6%8C%87%E5%8D%97/</link>
      <pubDate>Sat, 22 Mar 2025 17:35:40 +0800</pubDate>
      <guid>http://localhost:1313/posts/git/git%E4%B8%8Ehugo%E9%A1%B9%E7%9B%AE%E9%83%A8%E7%BD%B2%E5%AE%8C%E6%95%B4%E6%8C%87%E5%8D%97/</guid>
      <description>&lt;h2 id=&#34;1-git-基本操作与缓存管理&#34;&gt;1. Git 基本操作与缓存管理&lt;/h2&gt;
&lt;h3 id=&#34;11-移除已跟踪文件的缓存&#34;&gt;1.1 移除已跟踪文件的缓存&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# 从Git移除文件跟踪但保留本地文件&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;git rm --cached &amp;lt;文件路径&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# 递归移除目录&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;git rm --cached &amp;lt;目录路径&amp;gt; -r
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;12-更新gitignore-规则&#34;&gt;1.2 更新.gitignore 规则&lt;/h2&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;添加需要忽略的目录/文件到.gitignore
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nb&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;public/&amp;#34;&lt;/span&gt; &amp;gt;&amp;gt; .gitignore
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nb&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;resources/&amp;#34;&lt;/span&gt; &amp;gt;&amp;gt; .gitignore
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;13-提交gitignore-变更&#34;&gt;1.3 提交.gitignore 变更&lt;/h2&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;git add .gitignore
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;git commit -m &lt;span class=&#34;s2&#34;&gt;&amp;#34;更新忽略规则&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;1.3 历史记录清理（慎用）
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;14-从所有提交历史中彻底删除文件&#34;&gt;1.4 从所有提交历史中彻底删除文件&lt;/h2&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;git filter-branch --force --index-filter &lt;span class=&#34;se&#34;&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;se&#34;&gt;&lt;/span&gt;  &lt;span class=&#34;s2&#34;&gt;&amp;#34;git rm --cached --ignore-unmatch &amp;lt;文件路径&amp;gt;&amp;#34;&lt;/span&gt; &lt;span class=&#34;se&#34;&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;se&#34;&gt;&lt;/span&gt;  --prune-empty --tag-name-filter cat -- --all
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h1 id=&#34;2-hugo-项目提交到-github&#34;&gt;2. Hugo 项目提交到 GitHub&lt;/h1&gt;
&lt;h2 id=&#34;21-标准提交流程&#34;&gt;2.1 标准提交流程&lt;/h2&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;git init
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;git remote add origin https://github.com/&amp;lt;用户名&amp;gt;/&amp;lt;仓库&amp;gt;.git
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;git add .
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;git commit -m &lt;span class=&#34;s2&#34;&gt;&amp;#34;初始提交&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;git push -u origin main
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;22-推荐gitignore-配置&#34;&gt;2.2 推荐.gitignore 配置&lt;/h2&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-txt&#34; data-lang=&#34;txt&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;Hugo生成文件
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;/public
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;/resources
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;.hugo_build.lock
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;# 系统文件
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;.DS_Store
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;Thumbs.db
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;# 开发环境
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;node_modules/
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;.idea/
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;23-多平台构建注意事项&#34;&gt;2.3 多平台构建注意事项&lt;/h2&gt;
&lt;p&gt;1.部署平台需配置：
Hugo 扩展版环境变量&lt;/p&gt;</description>
    </item>
    <item>
      <title>银行家算法</title>
      <link>http://localhost:1313/posts/notes/os/%E9%93%B6%E8%A1%8C%E5%AE%B6%E7%AE%97%E6%B3%95/</link>
      <pubDate>Sun, 15 May 2022 20:05:43 +0800</pubDate>
      <guid>http://localhost:1313/posts/notes/os/%E9%93%B6%E8%A1%8C%E5%AE%B6%E7%AE%97%E6%B3%95/</guid>
      <description>&lt;h4 id=&#34;1死锁的概念&#34;&gt;1.死锁的概念&lt;/h4&gt;
&lt;h5 id=&#34;1什么是死锁&#34;&gt;（1）.什么是死锁&lt;/h5&gt;
&lt;p&gt;在并发环境下，各进程因竞争资源而造成的一种&lt;strong&gt;互相等待对方手里的资源，导致各进程都阻塞，都无法向前推进&lt;/strong&gt;的现象，就是“死锁”。发生死锁后若无外力干涉，这些进程都将无法向前推进。&lt;/p&gt;</description>
    </item>
    <item>
      <title>二十三、多生产者，消费者问题</title>
      <link>http://localhost:1313/posts/notes/os/%E4%BA%8C%E5%8D%81%E4%B8%89%E5%A4%9A%E7%94%9F%E4%BA%A7%E8%80%85%E6%B6%88%E8%B4%B9%E8%80%85%E9%97%AE%E9%A2%98/</link>
      <pubDate>Tue, 10 May 2022 17:20:14 +0800</pubDate>
      <guid>http://localhost:1313/posts/notes/os/%E4%BA%8C%E5%8D%81%E4%B8%89%E5%A4%9A%E7%94%9F%E4%BA%A7%E8%80%85%E6%B6%88%E8%B4%B9%E8%80%85%E9%97%AE%E9%A2%98/</guid>
      <description>&lt;h4 id=&#34;1问题描述&#34;&gt;1.问题描述&lt;/h4&gt;
&lt;p&gt;桌子上有一只盘子，每次只能向其中放入一个水果，爸爸专向盘子中放水果，妈妈专向盘子中放橘子，儿子专等着吃盘子中的橘子，女儿专等着吃盘子中的苹果。只有盘子为空时，爸爸或妈妈才可向盘子中放一个水果。仅当盘子中有自己需要的水果时，儿子或女儿可以从盘子中取出水果。用 PV 操作实现上述过程。&lt;/p&gt;</description>
    </item>
    <item>
      <title>二十二、生产者消费者问题</title>
      <link>http://localhost:1313/posts/notes/os/%E4%BA%8C%E5%8D%81%E4%BA%8C%E7%94%9F%E4%BA%A7%E8%80%85%E6%B6%88%E8%B4%B9%E8%80%85%E9%97%AE%E9%A2%98/</link>
      <pubDate>Sun, 01 May 2022 19:43:28 +0800</pubDate>
      <guid>http://localhost:1313/posts/notes/os/%E4%BA%8C%E5%8D%81%E4%BA%8C%E7%94%9F%E4%BA%A7%E8%80%85%E6%B6%88%E8%B4%B9%E8%80%85%E9%97%AE%E9%A2%98/</guid>
      <description>&lt;h4 id=&#34;1问题描述&#34;&gt;1.问题描述&lt;/h4&gt;
&lt;p&gt;系统中有一组生产者进程和一组消费者进程，生产者进程每次生产一个产品放入缓冲区，消费者进程每次从缓冲区中去除一个产品并使用。（这里的“产品”理解为某种数据）&lt;/p&gt;</description>
    </item>
    <item>
      <title>二十一、用信号量机制实现进程互斥、同步和前驱关系</title>
      <link>http://localhost:1313/posts/notes/os/%E4%BA%8C%E5%8D%81%E4%B8%80%E7%94%A8%E4%BF%A1%E5%8F%B7%E9%87%8F%E6%9C%BA%E5%88%B6%E5%AE%9E%E7%8E%B0%E8%BF%9B%E7%A8%8B%E4%BA%92%E6%96%A5%E5%90%8C%E6%AD%A5%E5%92%8C%E5%89%8D%E9%A9%B1%E5%85%B3%E7%B3%BB/</link>
      <pubDate>Wed, 27 Apr 2022 19:48:11 +0800</pubDate>
      <guid>http://localhost:1313/posts/notes/os/%E4%BA%8C%E5%8D%81%E4%B8%80%E7%94%A8%E4%BF%A1%E5%8F%B7%E9%87%8F%E6%9C%BA%E5%88%B6%E5%AE%9E%E7%8E%B0%E8%BF%9B%E7%A8%8B%E4%BA%92%E6%96%A5%E5%90%8C%E6%AD%A5%E5%92%8C%E5%89%8D%E9%A9%B1%E5%85%B3%E7%B3%BB/</guid>
      <description>&lt;h4 id=&#34;1信号量机制实现进程互斥&#34;&gt;1.信号量机制实现进程互斥&lt;/h4&gt;
&lt;ol&gt;
&lt;li&gt;分析并发进程的关键活动，划定临界区（如：对临界资源打印机的访问就应放在临界区）&lt;/li&gt;
&lt;li&gt;设置&lt;strong&gt;互斥信号量 mutex，初始值为 1&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;在临界区之前执行 P(mutex)&lt;/li&gt;
&lt;li&gt;在临界区之后执行 V(mutex)&lt;/li&gt;
&lt;/ol&gt;</description>
    </item>
    <item>
      <title>二十、信号量机制</title>
      <link>http://localhost:1313/posts/notes/os/%E4%BA%8C%E5%8D%81%E4%BF%A1%E5%8F%B7%E9%87%8F%E6%9C%BA%E5%88%B6/</link>
      <pubDate>Wed, 27 Apr 2022 17:08:57 +0800</pubDate>
      <guid>http://localhost:1313/posts/notes/os/%E4%BA%8C%E5%8D%81%E4%BF%A1%E5%8F%B7%E9%87%8F%E6%9C%BA%E5%88%B6/</guid>
      <description>&lt;h4 id=&#34;1信号量机制&#34;&gt;1.信号量机制&lt;/h4&gt;
&lt;p&gt;进程互斥的四种软件实现方式和进程互斥的三种硬件实现方式都存在一些问题。&lt;/p&gt;
&lt;p&gt;1.在双标志检查法中，&lt;strong&gt;进入区的“检查”、‘上锁”操作无法一气呵成&lt;/strong&gt;，从而导致了两个进程有可能同时进入临界区的问题。&lt;/p&gt;
&lt;p&gt;2.所有的解决方案都&lt;strong&gt;无法实现“让权等待”&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;1965 年，荷兰学者迪杰斯特拉 Dijkstra 提出了一种卓有成效的实现进程互斥、同步的方法&amp;ndash;&lt;strong&gt;信号量机制&lt;/strong&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>十九、进程互斥的硬件实现方法</title>
      <link>http://localhost:1313/posts/notes/os/%E5%8D%81%E4%B9%9D%E8%BF%9B%E7%A8%8B%E4%BA%92%E6%96%A5%E7%9A%84%E7%A1%AC%E4%BB%B6%E5%AE%9E%E7%8E%B0%E6%96%B9%E6%B3%95/</link>
      <pubDate>Wed, 27 Apr 2022 17:07:35 +0800</pubDate>
      <guid>http://localhost:1313/posts/notes/os/%E5%8D%81%E4%B9%9D%E8%BF%9B%E7%A8%8B%E4%BA%92%E6%96%A5%E7%9A%84%E7%A1%AC%E4%BB%B6%E5%AE%9E%E7%8E%B0%E6%96%B9%E6%B3%95/</guid>
      <description>&lt;p&gt;这里什么都没写，先占个坑以后再写。&lt;/p&gt;</description>
    </item>
    <item>
      <title>十八、进程互斥的软件实现方法</title>
      <link>http://localhost:1313/posts/notes/os/%E5%8D%81%E5%85%AB%E8%BF%9B%E7%A8%8B%E4%BA%92%E6%96%A5%E7%9A%84%E8%BD%AF%E4%BB%B6%E5%AE%9E%E7%8E%B0%E6%96%B9%E6%B3%95/</link>
      <pubDate>Tue, 26 Apr 2022 21:29:08 +0800</pubDate>
      <guid>http://localhost:1313/posts/notes/os/%E5%8D%81%E5%85%AB%E8%BF%9B%E7%A8%8B%E4%BA%92%E6%96%A5%E7%9A%84%E8%BD%AF%E4%BB%B6%E5%AE%9E%E7%8E%B0%E6%96%B9%E6%B3%95/</guid>
      <description>&lt;h4 id=&#34;1单标志法&#34;&gt;1.单标志法&lt;/h4&gt;
&lt;p&gt;算法思想：两个进程在&lt;strong&gt;访问完临界区后&lt;/strong&gt;会把使用临界区的权限转交给另一个进程。也就是说&lt;strong&gt;每个进程进入临界区的权限只能被另一个进程赋予。&lt;/strong&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>十七、进程同步和进程互斥</title>
      <link>http://localhost:1313/posts/notes/os/%E5%8D%81%E4%B8%83%E8%BF%9B%E7%A8%8B%E5%90%8C%E6%AD%A5%E5%92%8C%E8%BF%9B%E7%A8%8B%E4%BA%92%E6%96%A5/</link>
      <pubDate>Tue, 26 Apr 2022 20:28:05 +0800</pubDate>
      <guid>http://localhost:1313/posts/notes/os/%E5%8D%81%E4%B8%83%E8%BF%9B%E7%A8%8B%E5%90%8C%E6%AD%A5%E5%92%8C%E8%BF%9B%E7%A8%8B%E4%BA%92%E6%96%A5/</guid>
      <description>&lt;h4 id=&#34;1什么是进程同步&#34;&gt;1.什么是进程同步&lt;/h4&gt;
&lt;p&gt;回顾：进程具有&lt;strong&gt;异步性&lt;/strong&gt;的特征。异步性是指：各自并发执行的进程以各自独立的、不可预知的速度向前推进。&lt;/p&gt;
&lt;p&gt;例子：进程通信 &amp;mdash;- 管道通信&lt;/p&gt;
&lt;p&gt;写进程往管道里写数据，读进程再从管道里读数据。读进程和写进程并发地运行，由于并发必然导致异步性，因此“写数据”和“读数据”两个操作执行的先后顺序是不确定的。而实际应用中，又必须按照**“写数据 → 读数据”&lt;strong&gt;的顺序来执行，如何解决这种一部问题，就是&lt;/strong&gt;进程同步**所讨论的内容。&lt;/p&gt;</description>
    </item>
    <item>
      <title>十六、调度算法（2）</title>
      <link>http://localhost:1313/posts/notes/os/%E5%8D%81%E5%85%AD%E8%B0%83%E5%BA%A6%E7%AE%97%E6%B3%952/</link>
      <pubDate>Mon, 25 Apr 2022 19:39:43 +0800</pubDate>
      <guid>http://localhost:1313/posts/notes/os/%E5%8D%81%E5%85%AD%E8%B0%83%E5%BA%A6%E7%AE%97%E6%B3%952/</guid>
      <description>&lt;h4 id=&#34;1时间片轮转rrround-robin&#34;&gt;1.时间片轮转（RR，Round-Robin）&lt;/h4&gt;
&lt;blockquote&gt;
&lt;h5 id=&#34;rr&#34;&gt;RR&lt;/h5&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;算法思想：公平地、轮流地为每个进程服务，让每个进程在一定时间间隔内都可以得到响应&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;算法规则：按照各进程到达就绪队列的顺序，轮流让各个进程执行一个&lt;strong&gt;时间片&lt;/strong&gt;。若进程未在一个时间片内执行完，则剥夺处理机，将进程重新放回就绪队列尾重新排队。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;用于作业/进程调度：用于进程调度（只有作业放入内存建立了相应的进程后，才能被分配处理及时间片）&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;是否可抢占？：若进程未在一个时间片内执行完，将被剥夺处理机使用权，因此时间片轮转调度算法属于&lt;strong&gt;抢占式&lt;/strong&gt;的算法。由时钟装置发出&lt;strong&gt;时钟中断&lt;/strong&gt;来通知 CPU 时间片已到。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;优缺点：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;优点：公平；响应快，适用于分时操作系统&lt;/li&gt;
&lt;li&gt;缺点：由于高频率的进程切换，因此有一定的开销；不区分任务的紧急程度。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;是否会导致饥饿：不会&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;补充：时间片太大或太小会有什么影响？&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;&lt;/blockquote&gt;</description>
    </item>
    <item>
      <title>十五、调度算法</title>
      <link>http://localhost:1313/posts/notes/os/%E5%8D%81%E4%BA%94%E8%B0%83%E5%BA%A6%E7%AE%97%E6%B3%95/</link>
      <pubDate>Sat, 23 Apr 2022 17:11:08 +0800</pubDate>
      <guid>http://localhost:1313/posts/notes/os/%E5%8D%81%E4%BA%94%E8%B0%83%E5%BA%A6%E7%AE%97%E6%B3%95/</guid>
      <description>&lt;h4 id=&#34;1先来先服务fcfsfirst-come-firse-serve&#34;&gt;1.先来先服务（FCFS，First Come Firse Serve）&lt;/h4&gt;
&lt;blockquote&gt;
&lt;h5 id=&#34;fcfs&#34;&gt;FCFS&lt;/h5&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;算法思想：主要从“公平”的角度考虑（类似于生活中排队买东西）&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;算法规则：按照作业/进程到达的先后顺序进行服务&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;用于作业/进程调度：用于作业调度时，考虑的是哪个作业先到达后备队列；用于进程调度时，考虑的是那个进程先到达就绪队列&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;是否可抢占？ 非抢占式的算法&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;优缺点：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;优点：公平、算法实现简单&lt;/li&gt;
&lt;li&gt;缺点：排在长作业（进程）后面的短作业需要等待很长时间，带权周转时间很大，对作业来说用户体验不好。即：FCFS 算法&lt;strong&gt;对长作业有利，对短作业不利&lt;/strong&gt;（EG:排队买奶茶）&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;是否会导致&lt;strong&gt;饥饿&lt;/strong&gt;（某进程，作业长期得不到服务）：不会（只要进程或作业一直等着总会得到服务）&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;&lt;/blockquote&gt;</description>
    </item>
    <item>
      <title>十四、调度算法的评价指标</title>
      <link>http://localhost:1313/posts/notes/os/%E5%8D%81%E5%9B%9B%E8%B0%83%E5%BA%A6%E7%AE%97%E6%B3%95%E7%9A%84%E8%AF%84%E4%BB%B7%E6%8C%87%E6%A0%87/</link>
      <pubDate>Wed, 20 Apr 2022 20:38:19 +0800</pubDate>
      <guid>http://localhost:1313/posts/notes/os/%E5%8D%81%E5%9B%9B%E8%B0%83%E5%BA%A6%E7%AE%97%E6%B3%95%E7%9A%84%E8%AF%84%E4%BB%B7%E6%8C%87%E6%A0%87/</guid>
      <description>&lt;h4 id=&#34;1cpu-利用率&#34;&gt;1.CPU 利用率&lt;/h4&gt;
&lt;p&gt;由于早期的 CPU 造价极其昂贵，因此人们&lt;strong&gt;希望让 CPU 尽可能多地工作&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;**CPU 利用率：**指 CPU“忙碌”的时间占总时间的比例&lt;/p&gt;
&lt;p&gt;$利用率=\frac{忙碌的时间}{总时间}$&lt;/p&gt;</description>
    </item>
    <item>
      <title>十三、进程调度的时机，切换与过程调度方式</title>
      <link>http://localhost:1313/posts/notes/os/%E5%8D%81%E4%B8%89%E8%BF%9B%E7%A8%8B%E8%B0%83%E5%BA%A6%E7%9A%84%E6%97%B6%E6%9C%BA%E5%88%87%E6%8D%A2%E4%B8%8E%E8%BF%87%E7%A8%8B%E8%B0%83%E5%BA%A6%E6%96%B9%E5%BC%8F/</link>
      <pubDate>Wed, 20 Apr 2022 11:29:52 +0800</pubDate>
      <guid>http://localhost:1313/posts/notes/os/%E5%8D%81%E4%B8%89%E8%BF%9B%E7%A8%8B%E8%B0%83%E5%BA%A6%E7%9A%84%E6%97%B6%E6%9C%BA%E5%88%87%E6%8D%A2%E4%B8%8E%E8%BF%87%E7%A8%8B%E8%B0%83%E5%BA%A6%E6%96%B9%E5%BC%8F/</guid>
      <description>&lt;h4 id=&#34;1进程调度的时机&#34;&gt;1.进程调度的时机&lt;/h4&gt;
&lt;p&gt;&lt;strong&gt;进程调度&lt;/strong&gt;（低级调度），就是按照某种算法从就绪队列中选择一个进程为其分配处理机。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;需要进行&lt;/strong&gt;进程调度与切换的情况：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;当前运行的进程&lt;strong&gt;主动放弃&lt;/strong&gt;处理机（有的系统中只允许进程主动放弃处理机）
&lt;ul&gt;
&lt;li&gt;进程正常终止&lt;/li&gt;
&lt;li&gt;运行过程中发生异常而终止&lt;/li&gt;
&lt;li&gt;进程主动请求阻塞（如等待I/O）&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;当前运行的进程&lt;strong&gt;被动放弃&lt;/strong&gt;处理机（有的系统中，进程可以主动放弃处理机，当又更紧急的任务需要处理时，也会强行剥夺处理机（被动放弃））
&lt;ul&gt;
&lt;li&gt;分给进程的时间片用完&lt;/li&gt;
&lt;li&gt;有更紧急的事情需要处理（如I/O中断）&lt;/li&gt;
&lt;li&gt;有更高优先级的进程进入就绪队列&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;&lt;/blockquote&gt;</description>
    </item>
    <item>
      <title>十二、处理机调度的概念，层次</title>
      <link>http://localhost:1313/posts/notes/os/%E5%8D%81%E4%BA%8C%E5%A4%84%E7%90%86%E6%9C%BA%E8%B0%83%E5%BA%A6%E7%9A%84%E6%A6%82%E5%BF%B5%E5%B1%82%E6%AC%A1/</link>
      <pubDate>Wed, 20 Apr 2022 10:26:47 +0800</pubDate>
      <guid>http://localhost:1313/posts/notes/os/%E5%8D%81%E4%BA%8C%E5%A4%84%E7%90%86%E6%9C%BA%E8%B0%83%E5%BA%A6%E7%9A%84%E6%A6%82%E5%BF%B5%E5%B1%82%E6%AC%A1/</guid>
      <description>&lt;h4 id=&#34;1基本概念&#34;&gt;1.基本概念&lt;/h4&gt;
&lt;p&gt;当有一堆任务要处理，但由于资源有限，这些事情没办法同时处理，这就需要确定&lt;strong&gt;某种规则来决定处理这些任务的顺序&lt;/strong&gt;，这就是“调度”研究的问题。在多道程序系统中，进程的数量往往是多于处理机个数的，这样不可能同时并行的处理各个进程。&lt;strong&gt;处理机调度&lt;/strong&gt;，就是从就绪队列中&lt;strong&gt;按照一定的算法选择一个进程并将处理机分配给他&lt;/strong&gt;运行，以实现进程的并发执行。&lt;/p&gt;</description>
    </item>
    <item>
      <title>十一、线程概念和多线程模型</title>
      <link>http://localhost:1313/posts/notes/os/%E5%8D%81%E4%B8%80%E7%BA%BF%E7%A8%8B%E6%A6%82%E5%BF%B5%E5%92%8C%E5%A4%9A%E7%BA%BF%E7%A8%8B%E6%A8%A1%E5%9E%8B/</link>
      <pubDate>Tue, 19 Apr 2022 19:58:58 +0800</pubDate>
      <guid>http://localhost:1313/posts/notes/os/%E5%8D%81%E4%B8%80%E7%BA%BF%E7%A8%8B%E6%A6%82%E5%BF%B5%E5%92%8C%E5%A4%9A%E7%BA%BF%E7%A8%8B%E6%A8%A1%E5%9E%8B/</guid>
      <description>&lt;h4 id=&#34;1什么是线程为什么要引入线程&#34;&gt;1.什么是线程，为什么要引入线程&lt;/h4&gt;
&lt;p&gt;还没引入进程之前，系统中的各个程序只能串行执行。在传统的定成定义中，进程是程序的一次执行。但想实现多个功能显然不可能是由一个程序顺序处理就能实现的。如 QQ，可以同时进行视频，文字聊天，发送文件等操作。&lt;/p&gt;</description>
    </item>
    <item>
      <title>十、进程通信</title>
      <link>http://localhost:1313/posts/notes/os/%E5%8D%81%E8%BF%9B%E7%A8%8B%E9%80%9A%E4%BF%A1/</link>
      <pubDate>Mon, 18 Apr 2022 21:06:46 +0800</pubDate>
      <guid>http://localhost:1313/posts/notes/os/%E5%8D%81%E8%BF%9B%E7%A8%8B%E9%80%9A%E4%BF%A1/</guid>
      <description>&lt;h4 id=&#34;1什么是进程通信&#34;&gt;1.什么是进程通信&lt;/h4&gt;
&lt;p&gt;进程通信是进程之间的信息交换。&lt;/p&gt;
&lt;p&gt;进程是分配系统资源的单位（包括内存地址空间），因此&lt;strong&gt;各进程拥有的内存地址空间相互独立&lt;/strong&gt;。&lt;/p&gt;</description>
    </item>
    <item>
      <title>九、进程控制</title>
      <link>http://localhost:1313/posts/notes/os/%E4%B9%9D%E8%BF%9B%E7%A8%8B%E6%8E%A7%E5%88%B6/</link>
      <pubDate>Mon, 18 Apr 2022 00:39:23 +0800</pubDate>
      <guid>http://localhost:1313/posts/notes/os/%E4%B9%9D%E8%BF%9B%E7%A8%8B%E6%8E%A7%E5%88%B6/</guid>
      <description>&lt;h4 id=&#34;1什么是进程控制&#34;&gt;1.什么是进程控制&lt;/h4&gt;
&lt;p&gt;进程控制的主要功能是对系统中的所有进程实施有效的管理，它具有创建进程，撤销进程，实现进程间的状态转换等功能。简而言之，&lt;strong&gt;进程控制就是要时间进程状态的转换。&lt;/strong&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>八、进程的状态与转换</title>
      <link>http://localhost:1313/posts/notes/os/%E5%85%AB%E8%BF%9B%E7%A8%8B%E7%9A%84%E7%8A%B6%E6%80%81%E4%B8%8E%E8%BD%AC%E6%8D%A2/</link>
      <pubDate>Sun, 17 Apr 2022 23:56:35 +0800</pubDate>
      <guid>http://localhost:1313/posts/notes/os/%E5%85%AB%E8%BF%9B%E7%A8%8B%E7%9A%84%E7%8A%B6%E6%80%81%E4%B8%8E%E8%BD%AC%E6%8D%A2/</guid>
      <description>&lt;h4 id=&#34;1进程的基本状态&#34;&gt;1.进程的基本状态&lt;/h4&gt;
&lt;p&gt;&lt;strong&gt;三种基本状态：&lt;/strong&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;运行态&lt;/strong&gt;：占有 cpu，并在 cpu 上运行&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;就绪态&lt;/strong&gt;：已具备运行条件，但没有空闲 CPU 而暂时不能运行&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;阻塞态（或称等待态）&lt;/strong&gt;：因等待某一事件而暂时不能执行&lt;/li&gt;
&lt;/ol&gt;</description>
    </item>
    <item>
      <title>七、进程的定义、组成、自制方式、特征</title>
      <link>http://localhost:1313/posts/notes/os/%E4%B8%83%E8%BF%9B%E7%A8%8B%E7%9A%84%E5%AE%9A%E4%B9%89%E7%BB%84%E6%88%90%E8%87%AA%E5%88%B6%E6%96%B9%E5%BC%8F%E7%89%B9%E5%BE%81/</link>
      <pubDate>Sat, 16 Apr 2022 18:02:44 +0800</pubDate>
      <guid>http://localhost:1313/posts/notes/os/%E4%B8%83%E8%BF%9B%E7%A8%8B%E7%9A%84%E5%AE%9A%E4%B9%89%E7%BB%84%E6%88%90%E8%87%AA%E5%88%B6%E6%96%B9%E5%BC%8F%E7%89%B9%E5%BE%81/</guid>
      <description>&lt;h4 id=&#34;1进程的定义&#34;&gt;1.进程的定义&lt;/h4&gt;
&lt;p&gt;程序什么么？程序就是一个指令序列。&lt;/p&gt;
&lt;p&gt;早期的计算机支支持单道程序。引入多道程序后，多道程序可以并发执行。为了方便操作系统管理、完成程序并发执行，引入了&lt;strong&gt;进程，进程实体&lt;/strong&gt;的概念。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;PCB（进程控制块），程序段和数据段三部分构成了进程实体&lt;/strong&gt;。进程实体被简称为进程。所谓创建进程实际上是创建进程实体中的 PCB；撤销进程实质上就是撤销进程实体中的 PCB。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;PCB 是进程存在的唯一标志。&lt;/strong&gt;&lt;/p&gt;&lt;/blockquote&gt;</description>
    </item>
    <item>
      <title>Hexo Next8.x美化配置记录</title>
      <link>http://localhost:1313/posts/notes/hexo/hexo-next8-x%E7%BE%8E%E5%8C%96%E9%85%8D%E7%BD%AE%E8%AE%B0%E5%BD%95/</link>
      <pubDate>Fri, 15 Apr 2022 09:42:48 +0800</pubDate>
      <guid>http://localhost:1313/posts/notes/hexo/hexo-next8-x%E7%BE%8E%E5%8C%96%E9%85%8D%E7%BD%AE%E8%AE%B0%E5%BD%95/</guid>
      <description>&lt;h4 id=&#34;前言&#34;&gt;前言&lt;/h4&gt;
&lt;p&gt;网上收集的方法做一个整合贴。&lt;/p&gt;</description>
    </item>
    <item>
      <title>六、系统调用</title>
      <link>http://localhost:1313/posts/notes/os/%E5%85%AD%E7%B3%BB%E7%BB%9F%E8%B0%83%E7%94%A8/</link>
      <pubDate>Wed, 13 Apr 2022 20:45:57 +0800</pubDate>
      <guid>http://localhost:1313/posts/notes/os/%E5%85%AD%E7%B3%BB%E7%BB%9F%E8%B0%83%E7%94%A8/</guid>
      <description>&lt;h4 id=&#34;1什么是系统调用&#34;&gt;1.什么是系统调用&lt;/h4&gt;
&lt;p&gt;操作系统是用户和计算机硬件之间的接口需要向上层提供一些简单易用的服务。主要包括&lt;strong&gt;命令接口&lt;/strong&gt;和&lt;strong&gt;程序接口&lt;/strong&gt;。其中，程序接口由一组==&lt;strong&gt;系统调用&lt;/strong&gt;==组成。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;用户接口：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;命令接口（允许用户直接使用）&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;联机命令接口：用户说一句，系统做一句&lt;/li&gt;
&lt;li&gt;脱机命令接口：用户说一堆，系统做一堆。&lt;/li&gt;
&lt;/ul&gt;
&lt;ol start=&#34;2&#34;&gt;
&lt;li&gt;程序接口（允许用户通过程序间接使用）：由一组系统调用组成。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;系统调用就是操作系统提供给程序使用的接口，可以理解为一种可供应用程序调用的函数，应用程序可以发出系统调用请求来获得操作系统的服务。&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;&lt;/blockquote&gt;
&lt;h5 id=&#34;2系统调用的作用&#34;&gt;2.系统调用的作用：&lt;/h5&gt;
&lt;p&gt;应用程序通过系统调用请求操作系统的服务。系统中的各种共享资源由操作系统统一管理，因此在用户程序中，凡事与资源有关的操作（如存储分配，I/O 操作，文件管理等），都必须通过系统调用的方式像操作系统提出服务请求，由操作系统代为完成，这样&lt;strong&gt;可以保证系统的稳定性和安全性&lt;/strong&gt;，防止用户进行非法操作。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;系统调用&lt;/strong&gt;（按功能分类）：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;设备管理&lt;/strong&gt;：完成设备的请求、释放、启动等工作&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;文件管理&lt;/strong&gt;：完成文件的读写、创建、删除等功能&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;进程控制&lt;/strong&gt;：完成进程的创建。撤销、阻塞、唤醒等功能&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;进程通信&lt;/strong&gt;：完成进程之间的消息传递、信号传递等功能&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;内存管理&lt;/strong&gt;：完成内存的分配、回收等功能&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;系统调用相关处理涉及到对系统资源的管理，对进程的控制，这些功能需要执行一些&lt;strong&gt;特权指令&lt;/strong&gt;才能完成，因此&lt;strong&gt;系统调用的相关处理&lt;/strong&gt;需要在&lt;strong&gt;核心态&lt;/strong&gt;下完成。&lt;/p&gt;&lt;/blockquote&gt;&lt;/blockquote&gt;
&lt;h4 id=&#34;3系统调用与库函数的区别&#34;&gt;3.系统调用与库函数的区别&lt;/h4&gt;
&lt;p&gt;&lt;img alt=&#34;区别&#34; loading=&#34;lazy&#34; src=&#34;https://s1.ax1x.com/2022/04/13/LMvy5D.png&#34;&gt;&lt;/p&gt;
&lt;h4 id=&#34;4系统调用背后的过程&#34;&gt;4.系统调用背后的过程&lt;/h4&gt;
&lt;p&gt;首先需要做的是把传入系统调用的参数用相应的指令放入相应的通用寄存器中并执行相应的陷入指令（interrupt 的缩写，此汇编指令的作用是引发一次系统中断），指令运行在&lt;strong&gt;用户态&lt;/strong&gt;。当指令被执行时系统会执行相应的系统调用服务程序，这时候系统中断开始并运行在&lt;strong&gt;核心态&lt;/strong&gt;，待系统调用完成后会把执行结果返回给用户程序，重新回到用户态，继续执行后续操作。如下图所示：&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;过程&#34; loading=&#34;lazy&#34; src=&#34;https://s1.ax1x.com/2022/04/13/LMvRxA.png&#34;&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;有些书上陷入指令被叫做访管指令。概念是：因操作系统不允许用户态运行某些“危险性”高的指令，于是用户态运行这些指令的结果会转化成操作系统的核心态（管态）去运行。&lt;/p&gt;
&lt;p&gt;上图注意 3 补充：&lt;strong&gt;核心态只能执行系统调用，不能请求系统调用；用户态不能执行系统调用，只能请求系统调用&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;**系统调用发生在用户态，执行在核心态。**比如说你去仓库提货，仓库有专门的管理员而且你并不能进入仓库。管理员在门口待命。你过去跟他说你要什么什么，仓库管理员就进仓库提你想要的货物，提完货物后会回到仓库门口把货物交给你。在这个过程中，门外就相当于用户态，仓库内就相当于核心态。你跟管理员要货就相当于请求一次系统调用，管理员进仓库给你拿货就相当于执行了一次系统调用，并在拿完货后出门给我你货物，这个过程就相当于返回系统调用的结果。很简单的道理。&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;&lt;em&gt;吧啦吧啦：有的弹幕说中断就是切换任务的，我我个人觉得说的好像也蛮准确的&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;&lt;/blockquote&gt;&lt;/blockquote&gt;&lt;/blockquote&gt;
&lt;h4 id=&#34;5知识回顾&#34;&gt;5.知识回顾&lt;/h4&gt;
&lt;p&gt;&lt;img alt=&#34;回顾&#34; loading=&#34;lazy&#34; src=&#34;https://s1.ax1x.com/2022/04/13/LMxCiF.png&#34;&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>Hexo Next主题代码块美化</title>
      <link>http://localhost:1313/posts/notes/hexo/hexo-next%E4%B8%BB%E9%A2%98%E4%BB%A3%E7%A0%81%E5%9D%97%E7%BE%8E%E5%8C%96/</link>
      <pubDate>Mon, 11 Apr 2022 01:00:09 +0800</pubDate>
      <guid>http://localhost:1313/posts/notes/hexo/hexo-next%E4%B8%BB%E9%A2%98%E4%BB%A3%E7%A0%81%E5%9D%97%E7%BE%8E%E5%8C%96/</guid>
      <description>&lt;h4 id=&#34;1正文&#34;&gt;1.正文&lt;/h4&gt;
&lt;p&gt;在 NexT 主题下的 scripts 目录中创建 events.js&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-css&#34; data-lang=&#34;css&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nt&#34;&gt;var&lt;/span&gt; &lt;span class=&#34;nt&#34;&gt;exec&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nt&#34;&gt;require&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;child_process&amp;#39;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nc&#34;&gt;exec&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nt&#34;&gt;hexo&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nc&#34;&gt;on&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;new&amp;#39;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nt&#34;&gt;function&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;data&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;err&#34;&gt;exec(&amp;#39;open&lt;/span&gt; &lt;span class=&#34;err&#34;&gt;-a&lt;/span&gt; &lt;span class=&#34;err&#34;&gt;MacDown&lt;/span&gt; &lt;span class=&#34;err&#34;&gt;&amp;#39;&lt;/span&gt; &lt;span class=&#34;err&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;err&#34;&gt;data.path)&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;在 NexT 主题下的 scripts 目录中创建 codeblock.js&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-css&#34; data-lang=&#34;css&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nt&#34;&gt;var&lt;/span&gt; &lt;span class=&#34;nt&#34;&gt;attributes&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;s1&#34;&gt;&amp;#39;autocomplete=&amp;#34;off&amp;#34;&amp;#39;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;s1&#34;&gt;&amp;#39;autocorrect=&amp;#34;off&amp;#34;&amp;#39;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;s1&#34;&gt;&amp;#39;autocapitalize=&amp;#34;off&amp;#34;&amp;#39;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;s1&#34;&gt;&amp;#39;spellcheck=&amp;#34;false&amp;#34;&amp;#39;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;s1&#34;&gt;&amp;#39;contenteditable=&amp;#34;true&amp;#34;&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nt&#34;&gt;var&lt;/span&gt; &lt;span class=&#34;nt&#34;&gt;attributesStr&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nt&#34;&gt;attributes&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nc&#34;&gt;join&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39; &amp;#39;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nt&#34;&gt;hexo&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nc&#34;&gt;extend&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nc&#34;&gt;filter&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nc&#34;&gt;register&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;after_post_render&amp;#39;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nt&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;data&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;err&#34;&gt;while&lt;/span&gt; &lt;span class=&#34;err&#34;&gt;(/&amp;lt;figure&lt;/span&gt; &lt;span class=&#34;err&#34;&gt;class=&amp;#34;highlight&lt;/span&gt; &lt;span class=&#34;err&#34;&gt;([a-zA-Z]+)&amp;#34;&amp;gt;.*?&amp;lt;\/figure&amp;gt;/.test(data.content))&lt;/span&gt; &lt;span class=&#34;err&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;err&#34;&gt;data.content&lt;/span&gt; &lt;span class=&#34;err&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;err&#34;&gt;data.content.replace(/&amp;lt;figure&lt;/span&gt; &lt;span class=&#34;err&#34;&gt;class=&amp;#34;highlight&lt;/span&gt; &lt;span class=&#34;err&#34;&gt;([a-zA-Z]+)&amp;#34;&amp;gt;.*?&amp;lt;\/figure&amp;gt;/,&lt;/span&gt; &lt;span class=&#34;err&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;err&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;err&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;      &lt;span class=&#34;err&#34;&gt;var&lt;/span&gt; &lt;span class=&#34;err&#34;&gt;language&lt;/span&gt; &lt;span class=&#34;err&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;err&#34;&gt;RegExp.$1&lt;/span&gt; &lt;span class=&#34;err&#34;&gt;||&lt;/span&gt; &lt;span class=&#34;err&#34;&gt;&amp;#39;plain&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;      &lt;span class=&#34;err&#34;&gt;var&lt;/span&gt; &lt;span class=&#34;err&#34;&gt;lastMatch&lt;/span&gt; &lt;span class=&#34;err&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;err&#34;&gt;RegExp.lastMatch&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;      &lt;span class=&#34;err&#34;&gt;lastMatch&lt;/span&gt; &lt;span class=&#34;err&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;err&#34;&gt;lastMatch.replace(/&amp;lt;figure&lt;/span&gt; &lt;span class=&#34;err&#34;&gt;class=&amp;#34;highlight&lt;/span&gt; &lt;span class=&#34;err&#34;&gt;/,&lt;/span&gt; &lt;span class=&#34;err&#34;&gt;&amp;#39;&amp;lt;figure&lt;/span&gt; &lt;span class=&#34;err&#34;&gt;class=&amp;#34;iseeu&lt;/span&gt; &lt;span class=&#34;err&#34;&gt;highlight&lt;/span&gt; &lt;span class=&#34;err&#34;&gt;/&amp;#39;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;      &lt;span class=&#34;err&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;err&#34;&gt;&amp;#39;&amp;lt;div&lt;/span&gt; &lt;span class=&#34;err&#34;&gt;class=&amp;#34;highlight-wrap&amp;#34;&amp;#39;&lt;/span&gt; &lt;span class=&#34;err&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;err&#34;&gt;attributesStr&lt;/span&gt; &lt;span class=&#34;err&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;err&#34;&gt;&amp;#39;data-rel=&amp;#34;&amp;#39;&lt;/span&gt; &lt;span class=&#34;err&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;err&#34;&gt;language.toUpperCase()&lt;/span&gt; &lt;span class=&#34;err&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;err&#34;&gt;&amp;#39;&amp;#34;&amp;gt;&amp;#39;&lt;/span&gt; &lt;span class=&#34;err&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;err&#34;&gt;lastMatch&lt;/span&gt; &lt;span class=&#34;err&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;err&#34;&gt;&amp;#39;&amp;lt;/div&amp;gt;&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;err&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;nt&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;nt&#34;&gt;data&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;err&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;在 themes/next/source/css/_common/components/highlight/highlight.styl 的基础上调整了下样式，包裹上一层类 mac Panel 的效果。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;==注： 这里不用删除原来 highlight.styl 里边的内容，只需要在末尾添加下面代码即可==&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-css&#34; data-lang=&#34;css&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nc&#34;&gt;highlight-wrap&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;data-rel&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;k&#34;&gt;position&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;kc&#34;&gt;relative&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;k&#34;&gt;overflow&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;kc&#34;&gt;hidden&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;k&#34;&gt;border-radius&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;5&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;px&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;k&#34;&gt;box-shadow&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;10&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;px&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;30&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;px&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;px&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;rgba&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mf&#34;&gt;0.4&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;k&#34;&gt;margin&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;35&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;px&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;err&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;kp&#34;&gt;-webkit-&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;scrollbar&lt;/span&gt; &lt;span class=&#34;err&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;height&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;10&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;px&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;p&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;nd&#34;&gt;-webkit-scrollbar-track&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;kp&#34;&gt;-webkit-&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;box-shadow&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;kc&#34;&gt;inset&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;6&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;px&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;rgba&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mf&#34;&gt;0.3&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;border-radius&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;10&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;px&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;p&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;nd&#34;&gt;-webkit-scrollbar-thumb&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;border-radius&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;10&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;px&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;kp&#34;&gt;-webkit-&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;box-shadow&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;kc&#34;&gt;inset&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;6&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;px&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;rgba&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mf&#34;&gt;0.5&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;nd&#34;&gt;before&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;color&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;kc&#34;&gt;white&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;content&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;attr&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;data&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;rel&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;height&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;38&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;px&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;line-height&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;38&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;px&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;background&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;mh&#34;&gt;#21252b&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;color&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;mh&#34;&gt;#fff&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;font-size&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;16&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;px&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;position&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;kc&#34;&gt;absolute&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;top&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;left&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;width&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;100&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;%&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;font-family&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;Source Sans Pro&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;kc&#34;&gt;sans-serif&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;font-weight&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;kc&#34;&gt;bold&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;padding&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;px&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;80&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;px&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;text-indent&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;15&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;px&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;float&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;kc&#34;&gt;left&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;nd&#34;&gt;after&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;content&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34; &amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;position&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;kc&#34;&gt;absolute&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;kp&#34;&gt;-webkit-&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;border-radius&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;50&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;%&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;border-radius&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;50&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;%&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;background&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;mh&#34;&gt;#fc625d&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;width&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;12&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;px&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;height&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;12&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;px&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;top&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;left&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;20&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;px&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;margin-top&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;13&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;px&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;kp&#34;&gt;-webkit-&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;box-shadow&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;20&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;px&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;px&lt;/span&gt; &lt;span class=&#34;mh&#34;&gt;#fdbc40&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;40&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;px&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;px&lt;/span&gt; &lt;span class=&#34;mh&#34;&gt;#35cd4b&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;box-shadow&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;20&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;px&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;px&lt;/span&gt; &lt;span class=&#34;mh&#34;&gt;#fdbc40&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;40&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;px&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;px&lt;/span&gt; &lt;span class=&#34;mh&#34;&gt;#35cd4b&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;z-index&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;err&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;在 highlight.styl 中找到如下部分代码，修改 margin 为 36px 0 0 0：&lt;/p&gt;</description>
    </item>
    <item>
      <title>五、中断和异常</title>
      <link>http://localhost:1313/posts/notes/os/%E4%BA%94%E4%B8%AD%E6%96%AD%E5%92%8C%E5%BC%82%E5%B8%B8/</link>
      <pubDate>Sun, 10 Apr 2022 21:04:11 +0800</pubDate>
      <guid>http://localhost:1313/posts/notes/os/%E4%BA%94%E4%B8%AD%E6%96%AD%E5%92%8C%E5%BC%82%E5%B8%B8/</guid>
      <description>&lt;h4 id=&#34;1中断机制的诞生&#34;&gt;1.中断机制的诞生&lt;/h4&gt;
&lt;p&gt;为了解决早期计算机资源利用率低的的问题，人们发明了&lt;strong&gt;操作系统&lt;/strong&gt;，引入了&lt;strong&gt;中断机制&lt;/strong&gt;，实现多道程序并发执行。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;本质：发生了中断也就意味着需要操作系统介入，展开管理工作。&lt;strong&gt;CPU 收到计时部件发送的&lt;/strong&gt;中断信号&lt;/strong&gt;，切换为&lt;strong&gt;内核态&lt;/strong&gt;，操作系统负责处理中断。&lt;/p&gt;
&lt;h4 id=&#34;2中断的概念和作用&#34;&gt;2.中断的概念和作用&lt;/h4&gt;
&lt;ol&gt;
&lt;li&gt;当中断发生时，CPU 立即进入&lt;strong&gt;核心态&lt;/strong&gt;。&lt;/li&gt;
&lt;li&gt;当中断发生后，当前运行的进程暂停执行，并由操作系统内核对中断进行处理。&lt;/li&gt;
&lt;li&gt;对于不用的中断信号，会进行不同的处理。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;strong&gt;中断&lt;/strong&gt;可以使 CPU 从&lt;strong&gt;用户态切换为核心态，使操作系统获得计算机的控制权。&lt;strong&gt;有了终端，才能够实现多道程序并发执行。只有在&lt;/strong&gt;核心态&lt;/strong&gt;操作系统才能够执行特权指令。从&lt;strong&gt;用户态切换到核心态是通过中断实现的，并且是唯一的途径&lt;/strong&gt;。&lt;/p&gt;
&lt;h4 id=&#34;3中断的分类&#34;&gt;3.中断的分类&lt;/h4&gt;
&lt;p&gt;&lt;strong&gt;中断（广义上的）：&lt;/strong&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;内中断（也称异常，例外，陷入）&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;信号来源：CPU&lt;strong&gt;内部&lt;/strong&gt;，与当前执行的指令有关。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;自愿中断——指令中断（系统中断）&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;强迫中断——硬件故障或软件中断&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;外中断（狭义上的中断）&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;信号来源：CPU&lt;strong&gt;外部&lt;/strong&gt;与但钱执行的指令无关。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;外设请求&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;人工干预&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;strong&gt;另一种分类方式：&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;分类&#34; loading=&#34;lazy&#34; src=&#34;https://s1.ax1x.com/2022/04/10/LAsMqI.png&#34;&gt;&lt;/p&gt;
&lt;h4 id=&#34;4外部中断的处理过程&#34;&gt;4.外部中断的处理过程&lt;/h4&gt;
&lt;ol&gt;
&lt;li&gt;每条指令执行结束后，CPU 检查是否有外部中断信号&lt;/li&gt;
&lt;li&gt;若有外部中断信号，则需要保护中断进程的 CPU 环境&lt;/li&gt;
&lt;li&gt;根据中断信号类型转入相应的中断处理程序&lt;/li&gt;
&lt;li&gt;恢复原进程的 CPU 环境并推出中断，返回原进程继续往下执行&lt;/li&gt;
&lt;/ol&gt;
&lt;hr&gt;
&lt;h4 id=&#34;5知识图谱&#34;&gt;5.知识图谱&lt;/h4&gt;
&lt;p&gt;&lt;img alt=&#34;图谱&#34; loading=&#34;lazy&#34; src=&#34;https://s1.ax1x.com/2022/04/10/LA6gbR.png&#34;&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>四、操作系统的运行机制与体系系统</title>
      <link>http://localhost:1313/posts/notes/os/%E5%9B%9B%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E7%9A%84%E8%BF%90%E8%A1%8C%E6%9C%BA%E5%88%B6%E4%B8%8E%E4%BD%93%E7%B3%BB%E7%B3%BB%E7%BB%9F/</link>
      <pubDate>Sun, 10 Apr 2022 19:57:02 +0800</pubDate>
      <guid>http://localhost:1313/posts/notes/os/%E5%9B%9B%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E7%9A%84%E8%BF%90%E8%A1%8C%E6%9C%BA%E5%88%B6%E4%B8%8E%E4%BD%93%E7%B3%BB%E7%B3%BB%E7%BB%9F/</guid>
      <description>&lt;h4 id=&#34;1运行机制&#34;&gt;1.运行机制&lt;/h4&gt;
&lt;p&gt;什么是指令， “指令”和“代码”有什么区别？&lt;/p&gt;
&lt;p&gt;比如：C语言指令代码源文件经过编译后变成机器语言指令，而一条高级语言的代码可能对应着多条指令。&lt;/p&gt;
&lt;p&gt;简而言之，&lt;strong&gt;“指令”就是CPU能够处理和执行的最基本的命令&lt;/strong&gt;，就是让CPU干一件具体的事情。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;（1）两种指令：&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;特权指令&lt;/strong&gt;：如内存清零指令（不允许用户程序使用）&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;非特权指令&lt;/strong&gt;：如普通的运算指令&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;问：CPU怎样执行特权指令？&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;（2）两种处理器状态：&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;用户态（目态）&lt;/strong&gt;：在该状态下CPU只能执行非特权指令。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;核心态（管态）&lt;/strong&gt;：在该状态下特权指令和非特权指令都可以执行。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;在CPU中存在一个&lt;strong&gt;用户程序状态寄存器（PSW）&lt;/strong&gt;，在其中的某一个标志位来标识当前处理器处于什么状态。如0为用户态，1为核心态。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;（3）两种程序：&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;内核程序&lt;/strong&gt;：操作系统的内核程序是系统的管理者，既可以执行特权指令，也可以执行非特权指令，&lt;strong&gt;运行在核心态&lt;/strong&gt;。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;应用程序&lt;/strong&gt;：为了保证系统能安全运行，普通应用程序只能执行非特权指令，&lt;strong&gt;运行在用户态&lt;/strong&gt;。&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;2操作系统内核&#34;&gt;2.操作系统内核&lt;/h4&gt;
&lt;p&gt;[&lt;img alt=&#34;LANsi9.md.png&#34; loading=&#34;lazy&#34; src=&#34;https://s1.ax1x.com/2022/04/10/LANsi9.md.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;内核&lt;/strong&gt;是计算机配置上的底层&lt;strong&gt;软件&lt;/strong&gt;，是操作系统最基本，最核心的部分。&lt;/p&gt;
&lt;p&gt;实现操作系统内核功能的哪些程序就是&lt;strong&gt;内核程序&lt;/strong&gt;。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;操作系统内核包括：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;时钟管理&lt;/strong&gt;：实现计时功能。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;中断处理&lt;/strong&gt;：负责实现中断机制&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;原语&lt;/strong&gt;：
&lt;ul&gt;
&lt;li&gt;是一种特殊的程序&lt;/li&gt;
&lt;li&gt;处于操作系统最底层、最接近硬件的部分&lt;/li&gt;
&lt;li&gt;这种运行的程序具有&lt;strong&gt;原子性&lt;/strong&gt;，其运行过程不可中断&lt;/li&gt;
&lt;li&gt;运行时间较短，调用频繁&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;对系统资源进行管理的功能&lt;/strong&gt;：
&lt;ul&gt;
&lt;li&gt;进程管理&lt;/li&gt;
&lt;li&gt;存储管理&lt;/li&gt;
&lt;li&gt;设备管理&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;&lt;/blockquote&gt;
&lt;p&gt;内核又可被分为：&lt;strong&gt;大内核&lt;/strong&gt;和**微内核。**如果内核中包含存储管理，进程管理，设备管理等功能的就被叫做大内核，只包含最基本如时钟管理，中断处理，原语等的就被叫做微内核。&lt;/p&gt;
&lt;h4 id=&#34;3操作系统的体系结构&#34;&gt;3.操作系统的体系结构&lt;/h4&gt;
&lt;p&gt;操作系统的体系结构：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;大内核&lt;/strong&gt;
&lt;ul&gt;
&lt;li&gt;将操作系统的主要功能模块都作为系统内核，运行在核心态&lt;/li&gt;
&lt;li&gt;优点：高性能&lt;/li&gt;
&lt;li&gt;缺点：内核代码庞大，结构混乱，难以维护&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;微内核&lt;/strong&gt;
&lt;ul&gt;
&lt;li&gt;只把最基本的功能保留在内核&lt;/li&gt;
&lt;li&gt;优点：内核功能少，结构清晰，方便维护&lt;/li&gt;
&lt;li&gt;缺点：需要频繁的在核心态和用户态之间切换，性能低&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;比如：&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;比喻&#34; loading=&#34;lazy&#34; src=&#34;https://s1.ax1x.com/2022/04/10/LAU2fs.png&#34;&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>在GithubPages上搭建Hexo并配置NexT主题</title>
      <link>http://localhost:1313/posts/notes/hexo/%E5%9C%A8githubpages%E4%B8%8A%E6%90%AD%E5%BB%BAhexo%E5%B9%B6%E9%85%8D%E7%BD%AEnext%E4%B8%BB%E9%A2%98/</link>
      <pubDate>Sun, 10 Apr 2022 16:10:10 +0800</pubDate>
      <guid>http://localhost:1313/posts/notes/hexo/%E5%9C%A8githubpages%E4%B8%8A%E6%90%AD%E5%BB%BAhexo%E5%B9%B6%E9%85%8D%E7%BD%AEnext%E4%B8%BB%E9%A2%98/</guid>
      <description>&lt;h2 id=&#34;在-githubpages-上搭建-hexo-并配置-next-主题&#34;&gt;在 GithubPages 上搭建 Hexo 并配置 NexT 主题&lt;/h2&gt;
&lt;h4 id=&#34;啰里啰唆&#34;&gt;啰里啰唆&lt;/h4&gt;
&lt;p&gt;记录一下自己搭建 blog 的过程，之前在 vps 上配置过 word press，但是一直也没更新，而且好的 vps 很贵维护成本也很高，索性干脆不用了，就尝试一下使用 hexo 在 github 上搭建 blog，效果还不错，总共也就历时两天。网上类似的教程也很多，这里总结记录一下，方便以后开新坑&lt;/p&gt;
&lt;h4 id=&#34;首先安装-nodejs-和-git-for-windows&#34;&gt;首先安装 Node.js 和 Git for Windows&lt;/h4&gt;
&lt;p&gt;[Node.js 官网](&lt;a href=&#34;https://nodejs.org/en/&#34;&gt;Node.js (nodejs.org)&lt;/a&gt;)，[Git for windows 官网](&lt;a href=&#34;https://git-scm.com/&#34;&gt;Git (git-scm.com)&lt;/a&gt;)，Node.js 建议安装 LTS 长期支持版，支持周期更长且更稳定&lt;/p&gt;
&lt;p&gt;Node.js:点击第一个绿色的按钮下载 Node.js,版本不需要和图示一致，直接下载最新版即可。&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;LkbK0K.png&#34; loading=&#34;lazy&#34; src=&#34;https://s1.ax1x.com/2022/04/10/LkbK0K.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;Git:点击网页左侧小电脑当中的 Download for windows，直接下载最新版即可无需与图示中版本一致。&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;LkbmOx.png&#34; loading=&#34;lazy&#34; src=&#34;https://s1.ax1x.com/2022/04/10/LkbmOx.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;下载完成后按照默认安装设置安装即可。&lt;/p&gt;
&lt;h4 id=&#34;在-github-上创建一个仓库&#34;&gt;在 GitHub 上创建一个仓库&lt;/h4&gt;
&lt;p&gt;首先，需要一个 GitHub 账号。打开 GitHub 官网点击左上角的 sign in 就能注册了，不复述了很简单。进行这个过程可能需要&lt;strong&gt;科学&lt;/strong&gt;上网，具体自行百度。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;创建一个 Github 仓库&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;点击左上角头像，在弹出的下拉菜单中选择 &lt;strong&gt;Your repositories&lt;/strong&gt;，待页面加载完毕后点击左上角绿色的&lt;strong&gt;new&lt;/strong&gt;创建一个仓库。&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;Lkbum6.png&#34; loading=&#34;lazy&#34; src=&#34;https://s1.ax1x.com/2022/04/10/Lkbum6.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;注意&lt;/strong&gt;：仓库名务必是**==你的用户名.github.io==**,比如上面我的用户名是 ivy-lun,那么仓库名就是 ivy-lun.github.io,其他的保持默认即可，点击绿色按钮 Create repositories 即可创建一个仓库。&lt;/p&gt;</description>
    </item>
    <item>
      <title>markdown笔记</title>
      <link>http://localhost:1313/posts/notes/markdown/-markdown%E7%AC%94%E8%AE%B0/</link>
      <pubDate>Sat, 09 Apr 2022 11:49:01 +0800</pubDate>
      <guid>http://localhost:1313/posts/notes/markdown/-markdown%E7%AC%94%E8%AE%B0/</guid>
      <description>&lt;h3 id=&#34;-markdown-笔记&#34;&gt;· markdown 笔记&lt;/h3&gt;
&lt;h5 id=&#34;1代码块&#34;&gt;1.代码块&lt;/h5&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-markdown&#34; data-lang=&#34;markdown&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;``&lt;span class=&#34;sb&#34;&gt;`java 语言代码
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;sb&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;sb&#34;&gt;`&lt;/span&gt;``
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kd&#34;&gt;public&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;kd&#34;&gt;static&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;void&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;main&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;String&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;[]&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;args&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;){&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;System&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;out&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;Hello World!&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h5 id=&#34;2标题&#34;&gt;2.标题&lt;/h5&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-markdown&#34; data-lang=&#34;markdown&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;gh&#34;&gt;# 一级标题
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;gh&#34;&gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;gu&#34;&gt;## 二级标题
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;gu&#34;&gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;gu&#34;&gt;### 三级标题
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;gu&#34;&gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;...
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;gu&#34;&gt;###### 六级标题
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h1 id=&#34;一级标题&#34;&gt;一级标题&lt;/h1&gt;
&lt;h2 id=&#34;二级标题&#34;&gt;二级标题&lt;/h2&gt;
&lt;h3 id=&#34;三级标题&#34;&gt;三级标题&lt;/h3&gt;
&lt;h3 id=&#34;heading&#34;&gt;&amp;hellip;&lt;/h3&gt;
&lt;h6 id=&#34;六级标题&#34;&gt;六级标题&lt;/h6&gt;
&lt;h3 id=&#34;3字体&#34;&gt;3.字体&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-markdown&#34; data-lang=&#34;markdown&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;**加粗**
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;==高亮==
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;gd&#34;&gt;~~删除线~~&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;ge&#34;&gt;_斜体_&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;加粗&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;del&gt;删除线&lt;/del&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;斜体&lt;/em&gt;&lt;/p&gt;
&lt;h3 id=&#34;4引用&#34;&gt;4.引用&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-markdown&#34; data-lang=&#34;markdown&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;&amp;gt; &lt;/span&gt;&lt;span class=&#34;ge&#34;&gt;作者：某某某
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;ge&#34;&gt;&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;&lt;/span&gt;&lt;span class=&#34;ge&#34;&gt;&amp;gt; &amp;gt; 二级作者
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;ge&#34;&gt;&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;&amp;gt; &lt;/span&gt;&lt;span class=&#34;ge&#34;&gt;&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;ge&#34;&gt;&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;&amp;gt; &lt;/span&gt;&lt;span class=&#34;ge&#34;&gt;&amp;gt; &amp;gt; 三级作者
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;blockquote&gt;
&lt;p&gt;作者：某某某&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;二级作者&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;三级作者&lt;/p&gt;&lt;/blockquote&gt;&lt;/blockquote&gt;&lt;/blockquote&gt;
&lt;h3 id=&#34;5分割&#34;&gt;5.分割&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-markdown&#34; data-lang=&#34;markdown&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;gu&#34;&gt;## 分割线
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;gu&#34;&gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;分割线 2
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;---
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;分割线 1&lt;/p&gt;</description>
    </item>
    <item>
      <title>三、操作系统的发展和分类</title>
      <link>http://localhost:1313/posts/notes/os/%E4%B8%89%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E7%9A%84%E5%8F%91%E5%B1%95%E5%92%8C%E5%88%86%E7%B1%BB/</link>
      <pubDate>Sat, 09 Apr 2022 11:46:01 +0800</pubDate>
      <guid>http://localhost:1313/posts/notes/os/%E4%B8%89%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E7%9A%84%E5%8F%91%E5%B1%95%E5%92%8C%E5%88%86%E7%B1%BB/</guid>
      <description>&lt;h4 id=&#34;1-手工操作阶段&#34;&gt;1. 手工操作阶段&lt;/h4&gt;
&lt;p&gt;缺点：用户独占全机，人机速度矛盾导致资源利用率极低。人的速度慢，输入输出速度也慢，但计算机处理速度极快，人机速度矛盾。&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;手工操作阶段&#34; loading=&#34;lazy&#34; src=&#34;https://s1.ax1x.com/2022/04/10/LA2eu4.png&#34;&gt;&lt;/p&gt;
&lt;h4 id=&#34;2-批处理阶段&#34;&gt;2. 批处理阶段&lt;/h4&gt;
&lt;p&gt;&lt;strong&gt;（1）单道批处理系统&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;引入&lt;strong&gt;脱机输入/输出技术&lt;/strong&gt;（用磁带完成），并&lt;strong&gt;监督程序&lt;/strong&gt;负责控制作业的输入、输出。&lt;/p&gt;
&lt;p&gt;主要优点：一定程度缓解了人机速度矛盾，资源利用率有所提升&lt;/p&gt;
&lt;p&gt;主要缺点：&lt;strong&gt;内存中仅能有一道程序运行&lt;/strong&gt;，只有该程序运行结束之后才能进入到下一道程序，**cpu 有大量的时间都是在空闲等待 I/O 完成，**资源利用率仍然很低。&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;单道批处理系统&#34; loading=&#34;lazy&#34; src=&#34;https://s1.ax1x.com/2022/04/10/LA2nb9.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;（2）多道批处理系统&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;在多道批处理系统中，&lt;strong&gt;操作系统&lt;/strong&gt;开始出现。&lt;/p&gt;
&lt;p&gt;主要优点：多道程序&lt;strong&gt;并发&lt;/strong&gt;执行，&lt;strong&gt;共享&lt;/strong&gt;计算机资源，&lt;strong&gt;资源利用率大幅度提升&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;主要缺点：用户响应时间长，&lt;strong&gt;没有人机交互功能&lt;/strong&gt;（用户不能对执行的程序进行任何操作）。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;在单道批处理系统中，输入，计算和输出都是串行进行，资源利用率低。&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;&lt;img alt=&#34;1&#34; loading=&#34;lazy&#34; src=&#34;https://s1.ax1x.com/2022/04/10/LA2gbj.png&#34;&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;而在多道批处理系统中，当一个系统资源不再被使用时，可以提前进行下一个任务，系统&lt;strong&gt;并行执行任务&lt;/strong&gt;，资源利用率大幅度提高。&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;&lt;img alt=&#34;2&#34; loading=&#34;lazy&#34; src=&#34;https://s1.ax1x.com/2022/04/10/LA2Wan.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;（3）分时操作系统&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;计算机以&lt;strong&gt;时间片&lt;/strong&gt;为单位&lt;strong&gt;轮流为各个用户/作业服务&lt;/strong&gt;，各个用户可通过终端与计算机交互。&lt;/p&gt;
&lt;p&gt;主要优点：用户请求可以被即时响应，&lt;strong&gt;解决了人机交互的问题&lt;/strong&gt;，允许多个用户同时使用一台计算机，并且用户对计算机的操作&lt;strong&gt;相互独立&lt;/strong&gt;，感受不到别人的存在。&lt;/p&gt;
&lt;p&gt;主要却带你：&lt;strong&gt;不能优先处理一些紧急任务&lt;/strong&gt;，操作系统的各个用户、作业都是完全公平的，循环为每个用户、作业服务一个时间片，不区分任务的紧急性。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;（4）实时操作系统&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;主要优点：可以实时处理一些紧急任务，某些紧急任务不需要时间片排队。&lt;/p&gt;
&lt;p&gt;在实时操作系统的控制下，计算机接受到外部信号后及时进行处理，并且&lt;strong&gt;要在严格的时间限制内处理完成事件&lt;/strong&gt;，实时操作系统的主要特点是&lt;strong&gt;及时性和可靠性&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;实时操作系统可分为：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;硬实时系统：必须在&lt;strong&gt;绝对严格&lt;/strong&gt;的规定时间内完成处理。如导弹控制系统，自动驾驶系统。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;软实时系统：能接受偶尔违反时间规定。如 12306 火车订票系统。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;（5）网络操作系统&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;伴随计算机网络的发展而诞生的，能把网络的各个计算机有机地结合起来，实现数据传送等功能，&lt;strong&gt;实现网络中各种资源的共享（如文件共享）和各个计算机之间的通信&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;（6）分布式操作系统&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;主要特点是&lt;strong&gt;分布性和并行性&lt;/strong&gt;，系统中的割台计算机地位相同，&lt;strong&gt;任何工作都可以分布在这些计算机上，由他们并行、协同完成这个任务。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;（7）个人计算机操作系统&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;略，如 windows，macos 等&lt;/p&gt;</description>
    </item>
    <item>
      <title>二、操作系统的概念、功能和目标</title>
      <link>http://localhost:1313/posts/notes/os/%E4%BA%8C%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E7%9A%84%E6%A6%82%E5%BF%B5%E5%8A%9F%E8%83%BD%E5%92%8C%E7%9B%AE%E6%A0%87/</link>
      <pubDate>Sat, 09 Apr 2022 11:45:01 +0800</pubDate>
      <guid>http://localhost:1313/posts/notes/os/%E4%BA%8C%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E7%9A%84%E6%A6%82%E5%BF%B5%E5%8A%9F%E8%83%BD%E5%92%8C%E7%9B%AE%E6%A0%87/</guid>
      <description>&lt;h4 id=&#34;1操作系统的概念&#34;&gt;1.操作系统的概念&lt;/h4&gt;
&lt;p&gt;（1）操作系统是计算机中最基本的系统软件。&lt;/p&gt;
&lt;p&gt;（2）负责管理协调硬件、软件等计算机资源的工作&lt;/p&gt;
&lt;p&gt;（3）为上层用户、应用程序提供简单易用的服务&lt;/p&gt;
&lt;h4 id=&#34;2操作系统的功能和目标&#34;&gt;2.操作系统的功能和目标&lt;/h4&gt;
&lt;p&gt;&lt;strong&gt;（1）作为系统资源的管理者&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;处理机管理&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;存储管理&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;文件管理&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;设备管理&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;（2）作为用户和计算机硬件之间的接口&lt;/strong&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;命令接口&lt;/p&gt;
&lt;p&gt;用户直接使用的&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;联机命令接口（也叫&lt;strong&gt;交互式命令接口&lt;/strong&gt;，输入一句执行一句）&lt;/li&gt;
&lt;li&gt;脱机命令接口（也叫&lt;strong&gt;批处理命令接口&lt;/strong&gt;，输入一堆执行一堆）&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;程序接口（系统调用）&lt;/p&gt;
&lt;p&gt;用户通过程序间接实用&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;GUI（图形用户界面）&lt;/p&gt;
&lt;p&gt;图形化用户操作界面&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;strong&gt;（3）作为最接近硬件的层次&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;扩充机器&lt;/p&gt;</description>
    </item>
    <item>
      <title>一、操作系统的基本特征</title>
      <link>http://localhost:1313/posts/notes/os/%E4%B8%80%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E7%9A%84%E5%9F%BA%E6%9C%AC%E7%89%B9%E5%BE%81/</link>
      <pubDate>Sat, 09 Apr 2022 11:44:01 +0800</pubDate>
      <guid>http://localhost:1313/posts/notes/os/%E4%B8%80%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E7%9A%84%E5%9F%BA%E6%9C%AC%E7%89%B9%E5%BE%81/</guid>
      <description>&lt;h2 id=&#34;-操作系统的基本特征&#34;&gt;● 操作系统的基本特征&lt;/h2&gt;
&lt;p&gt;操作系统的四个特性：&lt;strong&gt;并发性，共享性，虚拟性，异步性&lt;/strong&gt;&lt;/p&gt;
&lt;h4 id=&#34;1-并发性&#34;&gt;1. 并发性&lt;/h4&gt;
&lt;p&gt;并发是指两个或多个事件在同一时间间隔内发生，&lt;strong&gt;宏观上是同时发生的&lt;/strong&gt;，但是&lt;strong&gt;微观上是交替发生的&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;操作系统的并发性&lt;/strong&gt;指计算机系统中同时存在多个运行的程序。&lt;/p&gt;
&lt;h4 id=&#34;2-共享性&#34;&gt;2. 共享性&lt;/h4&gt;
&lt;p&gt;即资源共享，是指系统中的资源可供内存中多个并发执行的进程共同使用。&lt;/p&gt;
&lt;p&gt;（1）两种资源共享方式&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;互斥共享方式（&lt;strong&gt;一个时间段内只允许一个进程访问资源&lt;/strong&gt;）&lt;/li&gt;
&lt;li&gt;同时共享方式（&lt;strong&gt;允许一个时间段内由多个进程“同时”对他们进行访问&lt;/strong&gt;）&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;同时&lt;/strong&gt;是宏观上的概念，微观上资源往往是交替进行资源访问的（分时共享）。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;==并发性和共享性两者的关系：==&lt;/p&gt;
&lt;p&gt;假如使用 QQ 发送文件 A，使用微信发送文件 B. 1.两个进程正在并发执行（并发性） 2.需要共享地访问硬盘资源（共享性）&lt;/p&gt;
&lt;p&gt;如果失去并发行，系统中只有一个程序在执行，则共享性即失去意义。
如果失去共享性，QQ 和微信不能同时访问硬盘资源，就无法实现同时发送文件，也就无法并发。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;即并发性和共享性二者互为存在条件&lt;/strong&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;h4 id=&#34;3-虚拟性&#34;&gt;3. 虚拟性&lt;/h4&gt;
&lt;p&gt;虚拟是指把一个物理上的实体变为逻辑上的对应物，物理实体是实际存在的，而逻辑上对应物是用户感受到的。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;空分复用技术（如虚拟存储器）&lt;/li&gt;
&lt;li&gt;时分复用技术（如虚拟处理器），微观上处理机在各个微小的时间段内交替着为各个进程服务。&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;4-异步性&#34;&gt;4. 异步性&lt;/h4&gt;
&lt;p&gt;异步是指，在多道程序环境下，允许多个程序并发执行，但由于资源有限，进程的执行不是一贯到底的，而是走走停停，以不可预知的速度向前推进，这就是进程的异步性。&lt;/p&gt;
&lt;p&gt;如果失去了并发性，则系统只能串行的执行所有的进程，每个程序的执行会一贯到底，&lt;strong&gt;只有系统拥有并发性，才有可能导致异步性。&lt;/strong&gt;&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
